[gd_resource type="ShaderMaterial" load_steps=12 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "weight"

[sub_resource type="VisualShaderNodeScalarInterp" id=16]
default_input_values = [ 0, 1.0, 1, 0.2, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarInterp" id=17]
default_input_values = [ 0, 1.0, 1, 10.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShader" id=11]
code = "shader_type canvas_item;
uniform float weight;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:11
	float n_out11p0 = weight;

// ScalarMix:14
	float n_in14p0 = 1.00000;
	float n_in14p1 = 0.20000;
	float n_out14p0 = mix(n_in14p0, n_in14p1, n_out11p0);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Input:2

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out4p0 = TEXTURE_tex_read.rgb;
		n_out4p1 = TEXTURE_tex_read.a;
	}

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:9
	float n_out9p0 = n_out14p0 * n_out5p0;

// ScalarMix:15
	float n_in15p0 = 1.00000;
	float n_in15p1 = 10.00000;
	float n_out15p0 = mix(n_in15p0, n_in15p1, n_out11p0);

// ScalarOp:7
	float n_out7p0 = n_out5p1 * n_out15p0;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out9p0, n_out7p0, n_out5p2);

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 49, -282 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1140, 100 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -120, 280 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -120, 160 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 180, 120 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 400, -20 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 940, -20 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 700, -180 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( 700, -300 )
nodes/fragment/11/node = SubResource( 15 )
nodes/fragment/11/position = Vector2( 120, -160 )
nodes/fragment/14/node = SubResource( 16 )
nodes/fragment/14/position = Vector2( 400, -280 )
nodes/fragment/15/node = SubResource( 17 )
nodes/fragment/15/position = Vector2( 400, -160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 2, 3, 0, 4, 0, 4, 0, 5, 0, 7, 0, 6, 1, 5, 1, 7, 0, 5, 2, 6, 2, 4, 1, 0, 1, 5, 0, 9, 1, 9, 0, 6, 0, 6, 0, 0, 0, 11, 0, 14, 2, 14, 0, 9, 0, 11, 0, 15, 2, 15, 0, 7, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/weight = null
